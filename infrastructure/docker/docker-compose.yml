version: '3.8'

services:
  # Database services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vote_system
      POSTGRES_USER: vote_user
      POSTGRES_PASSWORD: vote_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vote_user -d vote_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application services
  vote-api:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.vote-api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://vote_user:vote_password@postgres:5432/vote_system
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
      - PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  notification-service:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.notification-service
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgresql://vote_user:vote_password@postgres:5432/vote_system
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
      - PORT=8081
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  admin-api:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.admin-api
    ports:
      - "8082:8082"
    environment:
      - DATABASE_URL=postgresql://vote_user:vote_password@postgres:5432/vote_system
      - REDIS_URL=redis://redis:6379
      - RUST_LOG=info
      - PORT=8082
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Load balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - vote-api
      - notification-service
      - admin-api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: vote-system-network
